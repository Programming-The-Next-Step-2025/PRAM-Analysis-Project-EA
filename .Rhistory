usethis::use_description()
usethis::use_roxygen_md()
usethis::use_namespace()
fs::dir_create("inst/app")         # Shiny app lives here
fs::dir_create("dev")              # Dev scripts go here
fs::file_create("inst/app/app.R")
fs::file_create("R/data_io.R")
fs::file_create("dev/run_dev.R")
library(roxygen2)
library(shiny)
library(readxl)
#'Parse uploaded Excel file
#'Parse uploaded Excel file
#'
#'Parse uploaded Excel file
#'
#' @param file
library(roxygen2)
library(shiny)
library(readxl)
#'Parse uploaded Excel file
#'
#' @param file An input file for shiny
#' @return A data.frame
#' @export
parse_uploaded_file <- function(file) {
req(file)
ext <- tools::file_ext(file$datapath)
if (ext == "csv") {
readr::read_csv(file$datapath)
} else if (ext %in% c("xls", "xlsx")) {
readxl::read_excel(file$datapath)
} else {
stop("Unsupported file type")
}
}
devtools::document()
devtools::document()
devtools::document()
if (ext %in% c("xls", "xlsx")) {
readxl::read_excel(file$datapath)
} else {
stop("Unsupported file type")
}
#'Parse uploaded Excel file
#'
#' @param file An input file for shiny
#' @return A data.frame
#' @export
parse_uploaded_file <- function(file) {
req(file)
ext <- tools::file_ext(file$datapath)
if (ext %in% c("xls", "xlsx")) {
readxl::read_excel(file$datapath)
} else {
stop("Unsupported file type")
}
}
#'Parse uploaded Excel file
#'
#' @param file An input file for shiny
#' @return A data.frame
#' @export
parse_uploaded_file <- function(file) {
req(file)
ext <- tools::file_ext(file$datapath)
if (ext %in% c("xls", "xlsx")) {
readxl::read_excel(file$datapath)
} else {
stop("Unsupported file type")
}
}
devtools::document()
devtools::load_all()
devtools::document()
rm(list=ls())
devtools::load_all()
devtools::document()
library(shiny)
library(readr)
library(readxl)
ui <- fluidPage(
fileInput("file1", "Upload CSV or Excel"),
tableOutput("preview")
)
server <- function(input, output, session) {
data <- reactive({
parse_uploaded_file(input$file1)
})
output$preview <- renderTable({
head(data())
})
}
shinyApp(ui, server)
ui <- fluidPage(
fileInput("file1", "Upload Excel file here"),
tableOutput("preview")
)
#launch the shiny app
shinyApp(ui, server)
devtools::load_all()
devtools::document()
runApp('inst/app')
getwd()
setwd("C:/Users/ethan/OneDrive/Documents")
install.packages(" Programming-The-Next-Step-2025
recipe-finder")
install.packages("Programming-The-Next-Step-2025
recipe-finder")
install.git
library(git2r)
devtools::install_github("https://github.com/Programming-The-Next-Step-2025/recipe-finder")
devtools::install_github("Programming-The-Next-Step-2025/recipe-finder")
setwd("C:\Users\ethan\OneDrive\Documents\GitHub")
setwd("C:/Users/ethan/OneDrive/Documents/GitHub")
devtools::install_github("Programming-The-Next-Step-2025/recipe-finder")
devtools::install_git("https://github.com/Programming-The-Next-Step-2025/recipe-finder.git")
